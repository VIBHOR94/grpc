// Code generated by protoc-gen-go. DO NOT EDIT.
// source: average/averagepb/average.proto

package averagepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AverageRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageRequest) Reset()         { *m = AverageRequest{} }
func (m *AverageRequest) String() string { return proto.CompactTextString(m) }
func (*AverageRequest) ProtoMessage()    {}
func (*AverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6152ceea739a11c9, []int{0}
}

func (m *AverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageRequest.Unmarshal(m, b)
}
func (m *AverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageRequest.Marshal(b, m, deterministic)
}
func (m *AverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageRequest.Merge(m, src)
}
func (m *AverageRequest) XXX_Size() int {
	return xxx_messageInfo_AverageRequest.Size(m)
}
func (m *AverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AverageRequest proto.InternalMessageInfo

func (m *AverageRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type AverageResponse struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageResponse) Reset()         { *m = AverageResponse{} }
func (m *AverageResponse) String() string { return proto.CompactTextString(m) }
func (*AverageResponse) ProtoMessage()    {}
func (*AverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6152ceea739a11c9, []int{1}
}

func (m *AverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageResponse.Unmarshal(m, b)
}
func (m *AverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageResponse.Marshal(b, m, deterministic)
}
func (m *AverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageResponse.Merge(m, src)
}
func (m *AverageResponse) XXX_Size() int {
	return xxx_messageInfo_AverageResponse.Size(m)
}
func (m *AverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AverageResponse proto.InternalMessageInfo

func (m *AverageResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*AverageRequest)(nil), "average.AverageRequest")
	proto.RegisterType((*AverageResponse)(nil), "average.AverageResponse")
}

func init() { proto.RegisterFile("average/averagepb/average.proto", fileDescriptor_6152ceea739a11c9) }

var fileDescriptor_6152ceea739a11c9 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4f, 0x2c, 0x4b, 0x2d,
	0x4a, 0x4c, 0x4f, 0xd5, 0x87, 0xd2, 0x05, 0x49, 0x30, 0x96, 0x5e, 0x41, 0x51, 0x7e, 0x49, 0xbe,
	0x10, 0x3b, 0x94, 0xab, 0xa4, 0xc1, 0xc5, 0xe7, 0x08, 0x61, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16,
	0x97, 0x08, 0x89, 0x71, 0xb1, 0xe5, 0x95, 0xe6, 0x26, 0xa5, 0x16, 0x49, 0x30, 0x2a, 0x30, 0x6a,
	0xb0, 0x06, 0x41, 0x79, 0x4a, 0x9a, 0x5c, 0xfc, 0x70, 0x95, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9,
	0x20, 0xa5, 0x45, 0xa9, 0xc5, 0xa5, 0x39, 0x25, 0x60, 0xa5, 0x8c, 0x41, 0x50, 0x9e, 0x51, 0x24,
	0xdc, 0xd0, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x77, 0x2e, 0x3e, 0xe7, 0xfc, 0xdc,
	0x82, 0xd2, 0x92, 0x54, 0xa8, 0x84, 0x90, 0xb8, 0x1e, 0xcc, 0x45, 0xa8, 0xf6, 0x4b, 0x49, 0x60,
	0x4a, 0x40, 0xac, 0x53, 0x62, 0xd0, 0x60, 0x74, 0xe2, 0x8e, 0xe2, 0x84, 0xfb, 0x29, 0x89, 0x0d,
	0xec, 0x19, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbe, 0xef, 0xf5, 0xc0, 0xef, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AverageServiceClient is the client API for AverageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AverageServiceClient interface {
	// Client Streaming
	ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (AverageService_ComputeAverageClient, error)
}

type averageServiceClient struct {
	cc *grpc.ClientConn
}

func NewAverageServiceClient(cc *grpc.ClientConn) AverageServiceClient {
	return &averageServiceClient{cc}
}

func (c *averageServiceClient) ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (AverageService_ComputeAverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AverageService_serviceDesc.Streams[0], "/average.AverageService/ComputeAverage", opts...)
	if err != nil {
		return nil, err
	}
	x := &averageServiceComputeAverageClient{stream}
	return x, nil
}

type AverageService_ComputeAverageClient interface {
	Send(*AverageRequest) error
	CloseAndRecv() (*AverageResponse, error)
	grpc.ClientStream
}

type averageServiceComputeAverageClient struct {
	grpc.ClientStream
}

func (x *averageServiceComputeAverageClient) Send(m *AverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *averageServiceComputeAverageClient) CloseAndRecv() (*AverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AverageServiceServer is the server API for AverageService service.
type AverageServiceServer interface {
	// Client Streaming
	ComputeAverage(AverageService_ComputeAverageServer) error
}

// UnimplementedAverageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAverageServiceServer struct {
}

func (*UnimplementedAverageServiceServer) ComputeAverage(srv AverageService_ComputeAverageServer) error {
	return status.Errorf(codes.Unimplemented, "method ComputeAverage not implemented")
}

func RegisterAverageServiceServer(s *grpc.Server, srv AverageServiceServer) {
	s.RegisterService(&_AverageService_serviceDesc, srv)
}

func _AverageService_ComputeAverage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AverageServiceServer).ComputeAverage(&averageServiceComputeAverageServer{stream})
}

type AverageService_ComputeAverageServer interface {
	SendAndClose(*AverageResponse) error
	Recv() (*AverageRequest, error)
	grpc.ServerStream
}

type averageServiceComputeAverageServer struct {
	grpc.ServerStream
}

func (x *averageServiceComputeAverageServer) SendAndClose(m *AverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *averageServiceComputeAverageServer) Recv() (*AverageRequest, error) {
	m := new(AverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _AverageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "average.AverageService",
	HandlerType: (*AverageServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ComputeAverage",
			Handler:       _AverageService_ComputeAverage_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "average/averagepb/average.proto",
}
